#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HRAppLib
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HR")]
	public partial class HRDataModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDEPARTMENT(DEPARTMENT instance);
    partial void UpdateDEPARTMENT(DEPARTMENT instance);
    partial void DeleteDEPARTMENT(DEPARTMENT instance);
    partial void InsertEMPLOYEE(EMPLOYEE instance);
    partial void UpdateEMPLOYEE(EMPLOYEE instance);
    partial void DeleteEMPLOYEE(EMPLOYEE instance);
    partial void InsertLOCATION(LOCATION instance);
    partial void UpdateLOCATION(LOCATION instance);
    partial void DeleteLOCATION(LOCATION instance);
    #endregion
		
		public HRDataModelDataContext() : 
				base(global::HRAppLib.Properties.Settings.Default.HRConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HRDataModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HRDataModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HRDataModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HRDataModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DEPARTMENT> DEPARTMENTs
		{
			get
			{
				return this.GetTable<DEPARTMENT>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYEE> EMPLOYEEs
		{
			get
			{
				return this.GetTable<EMPLOYEE>();
			}
		}
		
		public System.Data.Linq.Table<LOCATION> LOCATIONs
		{
			get
			{
				return this.GetTable<LOCATION>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEPARTMENTS")]
	public partial class DEPARTMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DEPARTMENT_ID;
		
		private string _DEPARTMENT_NAME;
		
		private System.Nullable<int> _MANAGER_ID;
		
		private System.Nullable<int> _LOCATION_ID;
		
		private EntitySet<EMPLOYEE> _EMPLOYEEs;
		
		private EntityRef<LOCATION> _LOCATION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDEPARTMENT_IDChanging(int value);
    partial void OnDEPARTMENT_IDChanged();
    partial void OnDEPARTMENT_NAMEChanging(string value);
    partial void OnDEPARTMENT_NAMEChanged();
    partial void OnMANAGER_IDChanging(System.Nullable<int> value);
    partial void OnMANAGER_IDChanged();
    partial void OnLOCATION_IDChanging(System.Nullable<int> value);
    partial void OnLOCATION_IDChanged();
    #endregion
		
		public DEPARTMENT()
		{
			this._EMPLOYEEs = new EntitySet<EMPLOYEE>(new Action<EMPLOYEE>(this.attach_EMPLOYEEs), new Action<EMPLOYEE>(this.detach_EMPLOYEEs));
			this._LOCATION = default(EntityRef<LOCATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEPARTMENT_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DEPARTMENT_ID
		{
			get
			{
				return this._DEPARTMENT_ID;
			}
			set
			{
				if ((this._DEPARTMENT_ID != value))
				{
					this.OnDEPARTMENT_IDChanging(value);
					this.SendPropertyChanging();
					this._DEPARTMENT_ID = value;
					this.SendPropertyChanged("DEPARTMENT_ID");
					this.OnDEPARTMENT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEPARTMENT_NAME", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string DEPARTMENT_NAME
		{
			get
			{
				return this._DEPARTMENT_NAME;
			}
			set
			{
				if ((this._DEPARTMENT_NAME != value))
				{
					this.OnDEPARTMENT_NAMEChanging(value);
					this.SendPropertyChanging();
					this._DEPARTMENT_NAME = value;
					this.SendPropertyChanged("DEPARTMENT_NAME");
					this.OnDEPARTMENT_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANAGER_ID", DbType="Int")]
		public System.Nullable<int> MANAGER_ID
		{
			get
			{
				return this._MANAGER_ID;
			}
			set
			{
				if ((this._MANAGER_ID != value))
				{
					this.OnMANAGER_IDChanging(value);
					this.SendPropertyChanging();
					this._MANAGER_ID = value;
					this.SendPropertyChanged("MANAGER_ID");
					this.OnMANAGER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOCATION_ID", DbType="Int")]
		public System.Nullable<int> LOCATION_ID
		{
			get
			{
				return this._LOCATION_ID;
			}
			set
			{
				if ((this._LOCATION_ID != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLOCATION_IDChanging(value);
					this.SendPropertyChanging();
					this._LOCATION_ID = value;
					this.SendPropertyChanged("LOCATION_ID");
					this.OnLOCATION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPARTMENT_EMPLOYEE", Storage="_EMPLOYEEs", ThisKey="DEPARTMENT_ID", OtherKey="DEPARTMENT_ID")]
		public EntitySet<EMPLOYEE> EMPLOYEEs
		{
			get
			{
				return this._EMPLOYEEs;
			}
			set
			{
				this._EMPLOYEEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_DEPARTMENT", Storage="_LOCATION", ThisKey="LOCATION_ID", OtherKey="LOCATION_ID", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.DEPARTMENTs.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.DEPARTMENTs.Add(this);
						this._LOCATION_ID = value.LOCATION_ID;
					}
					else
					{
						this._LOCATION_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMPLOYEEs(EMPLOYEE entity)
		{
			this.SendPropertyChanging();
			entity.DEPARTMENT = this;
		}
		
		private void detach_EMPLOYEEs(EMPLOYEE entity)
		{
			this.SendPropertyChanging();
			entity.DEPARTMENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPLOYEES")]
	public partial class EMPLOYEE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EMPLOYEE_ID;
		
		private string _FIRST_NAME;
		
		private string _LAST_NAME;
		
		private string _EMAIL;
		
		private string _PHONE_NUMBER;
		
		private System.DateTime _HIRE_DATE;
		
		private string _JOB_ID;
		
		private System.Nullable<decimal> _SALARY;
		
		private System.Nullable<decimal> _COMMISSION_PCT;
		
		private System.Nullable<int> _MANAGER_ID;
		
		private System.Nullable<int> _DEPARTMENT_ID;
		
		private System.Nullable<char> _ISMANAGER;
		
		private string _PASSWORD;
		
		private EntitySet<EMPLOYEE> _EMPLOYEEs;
		
		private EntityRef<DEPARTMENT> _DEPARTMENT;
		
		private EntityRef<EMPLOYEE> _EMPLOYEE1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEMPLOYEE_IDChanging(int value);
    partial void OnEMPLOYEE_IDChanged();
    partial void OnFIRST_NAMEChanging(string value);
    partial void OnFIRST_NAMEChanged();
    partial void OnLAST_NAMEChanging(string value);
    partial void OnLAST_NAMEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnPHONE_NUMBERChanging(string value);
    partial void OnPHONE_NUMBERChanged();
    partial void OnHIRE_DATEChanging(System.DateTime value);
    partial void OnHIRE_DATEChanged();
    partial void OnJOB_IDChanging(string value);
    partial void OnJOB_IDChanged();
    partial void OnSALARYChanging(System.Nullable<decimal> value);
    partial void OnSALARYChanged();
    partial void OnCOMMISSION_PCTChanging(System.Nullable<decimal> value);
    partial void OnCOMMISSION_PCTChanged();
    partial void OnMANAGER_IDChanging(System.Nullable<int> value);
    partial void OnMANAGER_IDChanged();
    partial void OnDEPARTMENT_IDChanging(System.Nullable<int> value);
    partial void OnDEPARTMENT_IDChanged();
    partial void OnISMANAGERChanging(System.Nullable<char> value);
    partial void OnISMANAGERChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    #endregion
		
		public EMPLOYEE()
		{
			this._EMPLOYEEs = new EntitySet<EMPLOYEE>(new Action<EMPLOYEE>(this.attach_EMPLOYEEs), new Action<EMPLOYEE>(this.detach_EMPLOYEEs));
			this._DEPARTMENT = default(EntityRef<DEPARTMENT>);
			this._EMPLOYEE1 = default(EntityRef<EMPLOYEE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLOYEE_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EMPLOYEE_ID
		{
			get
			{
				return this._EMPLOYEE_ID;
			}
			set
			{
				if ((this._EMPLOYEE_ID != value))
				{
					this.OnEMPLOYEE_IDChanging(value);
					this.SendPropertyChanging();
					this._EMPLOYEE_ID = value;
					this.SendPropertyChanged("EMPLOYEE_ID");
					this.OnEMPLOYEE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIRST_NAME", DbType="VarChar(20)")]
		public string FIRST_NAME
		{
			get
			{
				return this._FIRST_NAME;
			}
			set
			{
				if ((this._FIRST_NAME != value))
				{
					this.OnFIRST_NAMEChanging(value);
					this.SendPropertyChanging();
					this._FIRST_NAME = value;
					this.SendPropertyChanged("FIRST_NAME");
					this.OnFIRST_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAST_NAME", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string LAST_NAME
		{
			get
			{
				return this._LAST_NAME;
			}
			set
			{
				if ((this._LAST_NAME != value))
				{
					this.OnLAST_NAMEChanging(value);
					this.SendPropertyChanging();
					this._LAST_NAME = value;
					this.SendPropertyChanged("LAST_NAME");
					this.OnLAST_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE_NUMBER", DbType="VarChar(20)")]
		public string PHONE_NUMBER
		{
			get
			{
				return this._PHONE_NUMBER;
			}
			set
			{
				if ((this._PHONE_NUMBER != value))
				{
					this.OnPHONE_NUMBERChanging(value);
					this.SendPropertyChanging();
					this._PHONE_NUMBER = value;
					this.SendPropertyChanged("PHONE_NUMBER");
					this.OnPHONE_NUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIRE_DATE", DbType="Date NOT NULL")]
		public System.DateTime HIRE_DATE
		{
			get
			{
				return this._HIRE_DATE;
			}
			set
			{
				if ((this._HIRE_DATE != value))
				{
					this.OnHIRE_DATEChanging(value);
					this.SendPropertyChanging();
					this._HIRE_DATE = value;
					this.SendPropertyChanged("HIRE_DATE");
					this.OnHIRE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOB_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string JOB_ID
		{
			get
			{
				return this._JOB_ID;
			}
			set
			{
				if ((this._JOB_ID != value))
				{
					this.OnJOB_IDChanging(value);
					this.SendPropertyChanging();
					this._JOB_ID = value;
					this.SendPropertyChanged("JOB_ID");
					this.OnJOB_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SALARY", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> SALARY
		{
			get
			{
				return this._SALARY;
			}
			set
			{
				if ((this._SALARY != value))
				{
					this.OnSALARYChanging(value);
					this.SendPropertyChanging();
					this._SALARY = value;
					this.SendPropertyChanged("SALARY");
					this.OnSALARYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMMISSION_PCT", DbType="Decimal(2,2)")]
		public System.Nullable<decimal> COMMISSION_PCT
		{
			get
			{
				return this._COMMISSION_PCT;
			}
			set
			{
				if ((this._COMMISSION_PCT != value))
				{
					this.OnCOMMISSION_PCTChanging(value);
					this.SendPropertyChanging();
					this._COMMISSION_PCT = value;
					this.SendPropertyChanged("COMMISSION_PCT");
					this.OnCOMMISSION_PCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANAGER_ID", DbType="Int")]
		public System.Nullable<int> MANAGER_ID
		{
			get
			{
				return this._MANAGER_ID;
			}
			set
			{
				if ((this._MANAGER_ID != value))
				{
					if (this._EMPLOYEE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANAGER_IDChanging(value);
					this.SendPropertyChanging();
					this._MANAGER_ID = value;
					this.SendPropertyChanged("MANAGER_ID");
					this.OnMANAGER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEPARTMENT_ID", DbType="Int")]
		public System.Nullable<int> DEPARTMENT_ID
		{
			get
			{
				return this._DEPARTMENT_ID;
			}
			set
			{
				if ((this._DEPARTMENT_ID != value))
				{
					if (this._DEPARTMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDEPARTMENT_IDChanging(value);
					this.SendPropertyChanging();
					this._DEPARTMENT_ID = value;
					this.SendPropertyChanged("DEPARTMENT_ID");
					this.OnDEPARTMENT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISMANAGER", AutoSync=AutoSync.Always, DbType="Char(1)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<char> ISMANAGER
		{
			get
			{
				return this._ISMANAGER;
			}
			set
			{
				if ((this._ISMANAGER != value))
				{
					this.OnISMANAGERChanging(value);
					this.SendPropertyChanging();
					this._ISMANAGER = value;
					this.SendPropertyChanged("ISMANAGER");
					this.OnISMANAGERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="VarChar(1000)")]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_EMPLOYEE", Storage="_EMPLOYEEs", ThisKey="EMPLOYEE_ID", OtherKey="MANAGER_ID")]
		public EntitySet<EMPLOYEE> EMPLOYEEs
		{
			get
			{
				return this._EMPLOYEEs;
			}
			set
			{
				this._EMPLOYEEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPARTMENT_EMPLOYEE", Storage="_DEPARTMENT", ThisKey="DEPARTMENT_ID", OtherKey="DEPARTMENT_ID", IsForeignKey=true)]
		public DEPARTMENT DEPARTMENT
		{
			get
			{
				return this._DEPARTMENT.Entity;
			}
			set
			{
				DEPARTMENT previousValue = this._DEPARTMENT.Entity;
				if (((previousValue != value) 
							|| (this._DEPARTMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEPARTMENT.Entity = null;
						previousValue.EMPLOYEEs.Remove(this);
					}
					this._DEPARTMENT.Entity = value;
					if ((value != null))
					{
						value.EMPLOYEEs.Add(this);
						this._DEPARTMENT_ID = value.DEPARTMENT_ID;
					}
					else
					{
						this._DEPARTMENT_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DEPARTMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_EMPLOYEE", Storage="_EMPLOYEE1", ThisKey="MANAGER_ID", OtherKey="EMPLOYEE_ID", IsForeignKey=true)]
		public EMPLOYEE EMPLOYEE1
		{
			get
			{
				return this._EMPLOYEE1.Entity;
			}
			set
			{
				EMPLOYEE previousValue = this._EMPLOYEE1.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEE1.Entity = null;
						previousValue.EMPLOYEEs.Remove(this);
					}
					this._EMPLOYEE1.Entity = value;
					if ((value != null))
					{
						value.EMPLOYEEs.Add(this);
						this._MANAGER_ID = value.EMPLOYEE_ID;
					}
					else
					{
						this._MANAGER_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("EMPLOYEE1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMPLOYEEs(EMPLOYEE entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE1 = this;
		}
		
		private void detach_EMPLOYEEs(EMPLOYEE entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOCATIONS")]
	public partial class LOCATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LOCATION_ID;
		
		private string _STREET_ADDRESS;
		
		private string _POSTAL_CODE;
		
		private string _CITY;
		
		private string _STATE_PROVINCE;
		
		private string _COUNTRY_ID;
		
		private EntitySet<DEPARTMENT> _DEPARTMENTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLOCATION_IDChanging(int value);
    partial void OnLOCATION_IDChanged();
    partial void OnSTREET_ADDRESSChanging(string value);
    partial void OnSTREET_ADDRESSChanged();
    partial void OnPOSTAL_CODEChanging(string value);
    partial void OnPOSTAL_CODEChanged();
    partial void OnCITYChanging(string value);
    partial void OnCITYChanged();
    partial void OnSTATE_PROVINCEChanging(string value);
    partial void OnSTATE_PROVINCEChanged();
    partial void OnCOUNTRY_IDChanging(string value);
    partial void OnCOUNTRY_IDChanged();
    #endregion
		
		public LOCATION()
		{
			this._DEPARTMENTs = new EntitySet<DEPARTMENT>(new Action<DEPARTMENT>(this.attach_DEPARTMENTs), new Action<DEPARTMENT>(this.detach_DEPARTMENTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOCATION_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LOCATION_ID
		{
			get
			{
				return this._LOCATION_ID;
			}
			set
			{
				if ((this._LOCATION_ID != value))
				{
					this.OnLOCATION_IDChanging(value);
					this.SendPropertyChanging();
					this._LOCATION_ID = value;
					this.SendPropertyChanged("LOCATION_ID");
					this.OnLOCATION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STREET_ADDRESS", DbType="VarChar(40)")]
		public string STREET_ADDRESS
		{
			get
			{
				return this._STREET_ADDRESS;
			}
			set
			{
				if ((this._STREET_ADDRESS != value))
				{
					this.OnSTREET_ADDRESSChanging(value);
					this.SendPropertyChanging();
					this._STREET_ADDRESS = value;
					this.SendPropertyChanged("STREET_ADDRESS");
					this.OnSTREET_ADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSTAL_CODE", DbType="VarChar(12)")]
		public string POSTAL_CODE
		{
			get
			{
				return this._POSTAL_CODE;
			}
			set
			{
				if ((this._POSTAL_CODE != value))
				{
					this.OnPOSTAL_CODEChanging(value);
					this.SendPropertyChanging();
					this._POSTAL_CODE = value;
					this.SendPropertyChanged("POSTAL_CODE");
					this.OnPOSTAL_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="VarChar(30)")]
		public string CITY
		{
			get
			{
				return this._CITY;
			}
			set
			{
				if ((this._CITY != value))
				{
					this.OnCITYChanging(value);
					this.SendPropertyChanging();
					this._CITY = value;
					this.SendPropertyChanged("CITY");
					this.OnCITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_PROVINCE", DbType="VarChar(25)")]
		public string STATE_PROVINCE
		{
			get
			{
				return this._STATE_PROVINCE;
			}
			set
			{
				if ((this._STATE_PROVINCE != value))
				{
					this.OnSTATE_PROVINCEChanging(value);
					this.SendPropertyChanging();
					this._STATE_PROVINCE = value;
					this.SendPropertyChanged("STATE_PROVINCE");
					this.OnSTATE_PROVINCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY_ID", DbType="Char(2)")]
		public string COUNTRY_ID
		{
			get
			{
				return this._COUNTRY_ID;
			}
			set
			{
				if ((this._COUNTRY_ID != value))
				{
					this.OnCOUNTRY_IDChanging(value);
					this.SendPropertyChanging();
					this._COUNTRY_ID = value;
					this.SendPropertyChanged("COUNTRY_ID");
					this.OnCOUNTRY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_DEPARTMENT", Storage="_DEPARTMENTs", ThisKey="LOCATION_ID", OtherKey="LOCATION_ID")]
		public EntitySet<DEPARTMENT> DEPARTMENTs
		{
			get
			{
				return this._DEPARTMENTs;
			}
			set
			{
				this._DEPARTMENTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEPARTMENTs(DEPARTMENT entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_DEPARTMENTs(DEPARTMENT entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
	}
}
#pragma warning restore 1591
